<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>노래 목록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-8">노래 목록</h1>
        
        <!-- 검색바 -->
        <div class="mb-8">
            <input type="text" 
                   id="searchInput" 
                   placeholder="노래 제목, 원어, 번역 제목, 가수명으로 검색..." 
                   class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
        </div>
        
        <!-- 노래 목록 -->
        <div class="song-list" id="songList">
            <% songs.forEach(function(song){ %>
                <div class="bg-white rounded-lg shadow-sm p-4 mb-4 hover:shadow-md transition-shadow duration-200">
                    <div class="flex justify-between items-center">
                        <a href="/songs/<%= song %>" class="text-lg font-medium text-blue-600 hover:text-blue-800">
                            <%= song.ori_name || song %>
                        </a>
                        <a href="/songview/<%= song %>" 
                           class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors duration-200">
                            보기
                        </a>
                    </div>
                </div>
            <% }); %>
        </div>
        
        <!-- 페이지네이션 -->
        <div class="pagination flex justify-center items-center space-x-2 mt-8">
            <% if (currentPage > 1) { %>
                <a href="/songs?page=1" 
                   class="px-3 py-1 bg-white rounded-md border border-gray-300 hover:bg-gray-50 transition-colors duration-200">
                    처음
                </a>
                <a href="/songs?page=<%= currentPage - 1 %>" 
                   class="px-3 py-1 bg-white rounded-md border border-gray-300 hover:bg-gray-50 transition-colors duration-200">
                    이전
                </a>
            <% } %>
            
            <% 
            let startPage = Math.max(1, currentPage - 4);
            let endPage = Math.min(totalPages, startPage + 9);
            
            if (endPage - startPage < 9) {
                startPage = Math.max(1, endPage - 9);
            }
            
            for (let i = startPage; i <= endPage; i++) { 
            %>
                <a href="/songs?page=<%= i %>" 
                   class="px-3 py-1 rounded-md transition-colors duration-200 <%= i === currentPage ? 'bg-blue-500 text-white' : 'bg-white border border-gray-300 hover:bg-gray-50' %>">
                    <%= i %>
                </a>
            <% } %>
            
            <% if (currentPage < totalPages) { %>
                <a href="/songs?page=<%= currentPage + 1 %>" 
                   class="px-3 py-1 bg-white rounded-md border border-gray-300 hover:bg-gray-50 transition-colors duration-200">
                    다음
                </a>
                <a href="/songs?page=<%= totalPages %>" 
                   class="px-3 py-1 bg-white rounded-md border border-gray-300 hover:bg-gray-50 transition-colors duration-200">
                    마지막
                </a>
            <% } %>
        </div>
        
        <!-- 노래 추가 버튼 -->
        <div class="mt-8 text-center">
            <a href="/add-song" 
               class="inline-block px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors duration-200">
                노래 추가하기
            </a>
        </div>
    </div>

    <script>
        const searchInput = document.getElementById('searchInput');
        const songList = document.getElementById('songList');
        const originalContent = songList.innerHTML;

        searchInput.addEventListener('input', async (e) => {
            const query = e.target.value.trim();
            const pagination = document.querySelector('.pagination');
            
            if (query.length === 0) {
                songList.innerHTML = originalContent;
                pagination.classList.remove('hidden');
                window.history.replaceState(null, '', '/songs');
                return;
            }

            window.history.replaceState(null, '', `/songs?q=${encodeURIComponent(query)}`);
            pagination.classList.add('hidden');

            try {
                const response = await fetch(`/api/search?q=${encodeURIComponent(query)}`);
                const data = await response.json();
                const results = data.results;

                songList.innerHTML = results.map(song => `
                    <div class="bg-white rounded-lg shadow-sm p-4 mb-4 hover:shadow-md transition-shadow duration-200">
                        <div class="flex justify-between items-center">
                            <a href="/songs/${encodeURIComponent(song.name)}" 
                               class="text-lg font-medium text-blue-600 hover:text-blue-800">
                                ${song.ori_name || song.name}
                            </a>
                            <a href="/songview/${encodeURIComponent(song.name)}" 
                               class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors duration-200">
                                보기
                            </a>
                        </div>
                        <div class="mt-2 space-y-1 text-sm text-gray-600">
                            ${song.ori_name ? `<div>원어명: ${song.ori_name}</div>` : ''}
                            ${song.kor_name ? `<div>한글명: ${song.kor_name}</div>` : ''}
                            ${song.artist ? `<div>가수: ${song.artist}</div>` : ''}
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Search error:', error);
                pagination.classList.remove('hidden');
            }
        });

        window.addEventListener('load', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const searchQuery = urlParams.get('q');
            if (searchQuery) {
                searchInput.value = searchQuery;
                searchInput.dispatchEvent(new Event('input'));
            }
        });
    </script>
</body>
</html>
