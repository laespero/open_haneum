<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>인기 아티스트 순위 - 오픈 한음</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">
    <link rel="manifest" href="/favicon/site.webmanifest">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
</head>
<body class="bg-gray-100 text-gray-800 font-sans leading-relaxed">
    <!-- 헤더 -->
    <header class="bg-gradient-to-r from-purple-500 to-indigo-500 text-white text-center py-12 px-6">
        <div class="container mx-auto max-w-6xl">
            <div class="flex items-center justify-center mb-4">
                <i class="fas fa-star text-4xl mr-4"></i>
                <h1 class="text-3xl md:text-4xl font-bold">인기 아티스트 순위</h1>
            </div>
            <p class="text-purple-100">총 조회수를 기준으로 한 실시간 인기 아티스트 차트</p>
            
            <div class="flex justify-center gap-4 mt-6">
                <a href="/" class="bg-white text-purple-600 font-semibold px-6 py-3 rounded-full transition duration-300 ease-in-out inline-flex items-center justify-center gap-2">
                    <i class="fas fa-home"></i> 메인으로
                </a>
                <a href="javascript:void(0)" onclick="goToPopularSongs()" class="bg-purple-400 hover:bg-purple-300 text-white font-semibold px-6 py-3 rounded-full transition duration-300 ease-in-out inline-flex items-center justify-center gap-2 cursor-pointer">
                    <i class="fas fa-fire"></i> 인기 노래
                </a>
            </div>
        </div>
    </header>

    <main class="py-12 px-6">
        <div class="container mx-auto max-w-5xl">
            <!-- 언어 필터 -->
            <div class="mb-8">
                <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                            <i class="fas fa-filter text-purple-600 mr-2"></i>
                            언어별 필터
                        </h3>
                        <div class="text-xs text-gray-500">
                            원하는 언어를 선택하세요
                        </div>
                    </div>
                    <div class="flex justify-center lg:justify-start flex-wrap gap-3">
                        <button onclick="filterByLanguage('all')" 
                                class="language-filter <%= (currentLanguage || 'all') === 'all' ? 'active bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-100 hover:bg-purple-600 text-gray-700 hover:text-white' %> font-semibold px-5 py-2.5 rounded-full transition duration-300 ease-in-out text-sm shadow-sm">
                            전체
                        </button>
                        <button onclick="filterByLanguage('english')" 
                                class="language-filter <%= (currentLanguage || 'all') === 'english' ? 'active bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-100 hover:bg-purple-600 text-gray-700 hover:text-white' %> font-semibold px-5 py-2.5 rounded-full transition duration-300 ease-in-out text-sm shadow-sm">
                            영어
                        </button>
                        <button onclick="filterByLanguage('japanese')" 
                                class="language-filter <%= (currentLanguage || 'all') === 'japanese' ? 'active bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-100 hover:bg-purple-600 text-gray-700 hover:text-white' %> font-semibold px-5 py-2.5 rounded-full transition duration-300 ease-in-out text-sm shadow-sm">
                            일본어
                        </button>
                        <button onclick="filterByLanguage('chinese')" 
                                class="language-filter <%= (currentLanguage || 'all') === 'chinese' ? 'active bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-100 hover:bg-purple-600 text-gray-700 hover:text-white' %> font-semibold px-5 py-2.5 rounded-full transition duration-300 ease-in-out text-sm shadow-sm">
                            중국어
                        </button>
                        <button onclick="filterByLanguage('other')" 
                                class="language-filter <%= (currentLanguage || 'all') === 'other' ? 'active bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-100 hover:bg-purple-600 text-gray-700 hover:text-white' %> font-semibold px-5 py-2.5 rounded-full transition duration-300 ease-in-out text-sm shadow-sm">
                            기타
                        </button>
                    </div>
                </div>
            </div>

            <!-- 로딩 인디케이터 -->
            <div id="loading" class="hidden text-center py-16">
                <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600"></div>
                <p class="mt-4 text-gray-600">데이터를 불러오는 중...</p>
            </div>

            <div id="main-content">
                <% if (popularArtists && popularArtists.length > 0) { %>
                <!-- 상위 3개 대형 카드 -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
                    <% popularArtists.slice(0, 3).forEach((artist, index) => { %>
                        <div class="relative bg-gradient-to-br <%= index === 0 ? 'from-yellow-400 to-orange-500' : index === 1 ? 'from-gray-300 to-gray-400' : 'from-purple-300 to-indigo-400' %> rounded-2xl p-6 text-white shadow-xl transform hover:scale-105 transition-all duration-300">
                            <div class="absolute -top-4 -left-4 w-12 h-12 bg-white rounded-full flex items-center justify-center text-2xl font-bold <%= index === 0 ? 'text-yellow-500' : index === 1 ? 'text-gray-500' : 'text-purple-500' %> shadow-lg">
                                <%= index + 1 %>
                            </div>
                            <% if (index === 0) { %>
                                <div class="text-center mb-3">
                                    <i class="fas fa-crown text-3xl text-yellow-200"></i>
                                </div>
                            <% } %>
                            <a href="/songs?q=<%= encodeURIComponent(artist.name) %>" class="block">
                                <h3 class="font-bold text-xl mb-3 text-center">
                                    <%= artist.name %>
                                </h3>
                                <div class="text-center space-y-2">
                                    <div class="flex items-center justify-center">
                                        <i class="fas fa-eye mr-2"></i>
                                        <span class="text-lg font-semibold"><%= artist.totalViews.toLocaleString() %></span>
                                    </div>
                                    <div class="text-sm opacity-90">
                                        총 <%= artist.songs.length %>곡
                                    </div>
                                    <div class="text-xs opacity-75">
                                        평균 <%= Math.round(artist.totalViews / artist.songs.length).toLocaleString() %> 조회수/곡
                                    </div>
                                </div>
                            </a>
                        </div>
                    <% }); %>
                </div>

                <!-- 전체 순위 목록 -->
                <div class="bg-white rounded-xl shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-xl font-bold text-gray-800">전체 순위</h2>
                    </div>
                    <div class="divide-y divide-gray-100">
                        <% popularArtists.forEach((artist, index) => { %>
                            <div class="p-6 hover:bg-gray-50 transition-colors duration-200">
                                <div class="flex items-center space-x-4">
                                    <div class="flex-shrink-0 w-12 h-12 rounded-full bg-gradient-to-r from-purple-400 to-indigo-400 flex items-center justify-center text-white font-bold">
                                        <%= index + 1 %>
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <a href="/songs?q=<%= encodeURIComponent(artist.name) %>" class="block group">
                                            <h3 class="font-bold text-lg text-gray-800 group-hover:text-purple-600 transition-colors mb-2">
                                                <%= artist.name %>
                                            </h3>
                                            <div class="flex flex-wrap gap-4 text-sm text-gray-600">
                                                <span>
                                                    <i class="fas fa-music mr-1"></i>
                                                    <%= artist.songs.length %>곡
                                                </span>
                                                <span>
                                                    <i class="fas fa-chart-line mr-1"></i>
                                                    평균 <%= Math.round(artist.totalViews / artist.songs.length).toLocaleString() %> 조회수/곡
                                                </span>
                                            </div>
                                        </a>
                                        
                                        <!-- 대표곡 미리보기 -->
                                        <div class="mt-3">
                                            <div class="text-xs text-gray-500 mb-2">인기곡</div>
                                            <div class="flex flex-wrap gap-2">
                                                <% artist.songs.sort((a, b) => b.views - a.views).slice(0, 3).forEach(song => { %>
                                                    <a href="/songs/<%= song.name %>" class="inline-block bg-purple-50 hover:bg-purple-100 text-purple-700 text-xs px-2 py-1 rounded-full transition-colors">
                                                        <%= song.ori_name || song.name %> (<%= song.views.toLocaleString() %>)
                                                    </a>
                                                <% }); %>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="flex-shrink-0 text-right">
                                        <div class="text-xl font-bold text-purple-600">
                                            <i class="fas fa-eye mr-1"></i>
                                            <%= artist.totalViews.toLocaleString() %>
                                        </div>
                                        <div class="text-xs text-gray-500">총 조회수</div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            <% } else { %>
                <!-- 빈 상태 -->
                <div class="text-center py-16">
                    <div class="text-8xl mb-6">🎭</div>
                    <h2 class="text-2xl font-bold text-gray-600 mb-4">아직 인기 아티스트가 없습니다</h2>
                    <p class="text-gray-500 mb-8">노래를 듣고 첫 번째 아티스트 차트를 만들어보세요!</p>
                    <a href="/" class="bg-purple-500 hover:bg-purple-600 text-white font-semibold px-8 py-3 rounded-full transition duration-300 ease-in-out inline-flex items-center justify-center gap-2">
                        <i class="fas fa-home"></i> 메인으로 돌아가기
                    </a>
                </div>
            <% } %>
            </div>
        </div>
    </main>

    <!-- 푸터 -->
    <footer class="bg-gray-800 text-gray-400 py-12 px-6 text-center">
        <div class="container mx-auto max-w-6xl">
            <p class="notice text-xs text-gray-500 mt-2 max-w-xl mx-auto">본 사이트의 가사 정보는 교육 및 비상업적 용도로 제공되며, 저작권은 해당 저작권자에게 있습니다.</p>
        </div>
    </footer>

    <script>
        // 쿠키 유틸리티 함수들
        function setCookie(name, value, days = 30) {
            const expires = new Date();
            expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
            document.cookie = name + '=' + value + ';expires=' + expires.toUTCString() + ';path=/';
        }
        
        function getCookie(name) {
            const nameEQ = name + '=';
            const ca = document.cookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i];
                while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }

        // 쿠키 우선, URL 파라미터 차순, 기본값 순으로 언어 설정
        const urlParams = new URLSearchParams(window.location.search);
        const urlLanguage = urlParams.get('language') || 'all';
        const cookieLanguage = getCookie('preferredLanguage') || 'all';
        let currentLanguage = urlLanguage !== 'all' ? urlLanguage : cookieLanguage;
        
        // 서버에서 렌더링된 언어
        const serverLanguage = '<%= currentLanguage || "all" %>';

        // 인기 노래 페이지로 동적 이동
        function goToPopularSongs() {
            if (currentLanguage !== 'all') {
                window.location.href = `/popular/songs?language=${currentLanguage}`;
            } else {
                window.location.href = '/popular/songs';
            }
        }
        
        // 브라우저 뒤로/앞으로 가기 처리
        window.addEventListener('popstate', function(event) {
            const urlParams = new URLSearchParams(window.location.search);
            const newLanguage = urlParams.get('language') || 'all';
            
            if (newLanguage !== currentLanguage) {
                currentLanguage = newLanguage;
                setCookie('preferredLanguage', newLanguage);
                updateFilterButtons(newLanguage);
                
                // API 호출 없이 페이지 새로고침으로 간단히 처리
                window.location.reload();
            }
        });

        // 페이지 로드 시 현재 언어에 맞게 버튼 상태 설정
        window.onload = function() {
            updateFilterButtons(currentLanguage);
            
            // 서버에서 이미 올바른 언어로 렌더링된 경우 AJAX 호출 안함
            if (currentLanguage !== serverLanguage) {
                console.log(`언어 불일치 감지: 클라이언트(${currentLanguage}) vs 서버(${serverLanguage}) - AJAX 호출`);
                filterByLanguage(currentLanguage);
            } else if (currentLanguage !== 'all' && !urlParams.get('language')) {
                // 쿠키 언어와 서버 언어가 같지만 URL에 파라미터가 없는 경우 URL만 업데이트
                console.log(`언어 일치하지만 URL 파라미터 없음: ${currentLanguage} - URL만 업데이트`);
                updateURL(currentLanguage);
            }
        };

        // URL 업데이트 함수
        function updateURL(language) {
            const url = new URL(window.location);
            if (language === 'all') {
                url.searchParams.delete('language');
            } else {
                url.searchParams.set('language', language);
            }
            
            // URL 업데이트 (페이지 리로드 없이)
            window.history.replaceState({language: language}, '', url.toString());
        }

        // 언어 필터링 함수
        async function filterByLanguage(language) {
            if (currentLanguage === language) return;
            
            currentLanguage = language;
            
            // 쿠키에 언어 설정 저장
            setCookie('preferredLanguage', language);
            
            // URL 업데이트
            updateURL(language);
            
            // 버튼 상태 업데이트
            updateFilterButtons(language);
            
            // 로딩 표시
            showLoading();
            
            try {
                // API 호출
                const response = await fetch(`/api/popular/artists?language=${language}`);
                const data = await response.json();
                
                // 콘텐츠 업데이트
                updateMainContent(data.popularArtists);
                
            } catch (error) {
                console.error('필터링 중 오류:', error);
                alert('필터링 중 오류가 발생했습니다.');
            } finally {
                hideLoading();
            }
        }

        // 필터 버튼 상태 업데이트
        function updateFilterButtons(activeLanguage) {
            const buttons = document.querySelectorAll('.language-filter');
            buttons.forEach(button => {
                button.classList.remove('active', 'bg-purple-600', 'text-white', 'hover:bg-purple-700');
                button.classList.add('bg-gray-100', 'hover:bg-purple-600', 'text-gray-700', 'hover:text-white');
            });
            
            const activeButton = document.querySelector(`[onclick="filterByLanguage('${activeLanguage}')"]`);
            if (activeButton) {
                activeButton.classList.remove('bg-gray-100', 'hover:bg-purple-600', 'text-gray-700', 'hover:text-white');
                activeButton.classList.add('active', 'bg-purple-600', 'text-white', 'hover:bg-purple-700');
            }
        }

        // 로딩 표시/숨김
        function showLoading() {
            document.getElementById('loading').classList.remove('hidden');
            document.getElementById('main-content').style.opacity = '0.5';
        }

        function hideLoading() {
            document.getElementById('loading').classList.add('hidden');
            document.getElementById('main-content').style.opacity = '1';
        }

        // 메인 콘텐츠 업데이트
        function updateMainContent(popularArtists) {
            const mainContent = document.getElementById('main-content');
            
            if (!popularArtists || popularArtists.length === 0) {
                mainContent.innerHTML = `
                    <div class="text-center py-16">
                        <div class="text-8xl mb-6">🎭</div>
                        <h2 class="text-2xl font-bold text-gray-600 mb-4">선택한 언어의 인기 아티스트가 없습니다</h2>
                        <p class="text-gray-500 mb-8">다른 언어를 선택하거나 노래를 더 들어보세요!</p>
                    </div>
                `;
                return;
            }

            mainContent.innerHTML = `
                <!-- 상위 3개 대형 카드 -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
                    ${popularArtists.slice(0, 3).map((artist, index) => `
                        <div class="relative bg-gradient-to-br ${index === 0 ? 'from-yellow-400 to-orange-500' : index === 1 ? 'from-gray-300 to-gray-400' : 'from-purple-300 to-indigo-400'} rounded-2xl p-6 text-white shadow-xl transform hover:scale-105 transition-all duration-300">
                            <div class="absolute -top-4 -left-4 w-12 h-12 bg-white rounded-full flex items-center justify-center text-2xl font-bold ${index === 0 ? 'text-yellow-500' : index === 1 ? 'text-gray-500' : 'text-purple-500'} shadow-lg">
                                ${index + 1}
                            </div>
                            ${index === 0 ? '<div class="text-center mb-3"><i class="fas fa-crown text-3xl text-yellow-200"></i></div>' : ''}
                            <a href="/songs?q=${encodeURIComponent(artist.name)}" class="block">
                                <h3 class="font-bold text-xl mb-3 text-center">
                                    ${artist.name}
                                </h3>
                                <div class="text-center space-y-2">
                                    <div class="flex items-center justify-center">
                                        <i class="fas fa-eye mr-2"></i>
                                        <span class="text-lg font-semibold">${artist.totalViews.toLocaleString()}</span>
                                    </div>
                                    <div class="text-sm opacity-90">
                                        총 ${artist.songs.length}곡
                                    </div>
                                    <div class="text-xs opacity-75">
                                        평균 ${Math.round(artist.totalViews / artist.songs.length).toLocaleString()} 조회수/곡
                                    </div>
                                </div>
                            </a>
                        </div>
                    `).join('')}
                </div>

                <!-- 전체 순위 목록 -->
                <div class="bg-white rounded-xl shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-xl font-bold text-gray-800">전체 순위</h2>
                    </div>
                    <div class="divide-y divide-gray-100">
                        ${popularArtists.map((artist, index) => `
                            <div class="p-6 hover:bg-gray-50 transition-colors duration-200">
                                <div class="flex items-center space-x-4">
                                    <div class="flex-shrink-0 w-12 h-12 rounded-full bg-gradient-to-r from-purple-400 to-indigo-400 flex items-center justify-center text-white font-bold">
                                        ${index + 1}
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <a href="/songs?q=${encodeURIComponent(artist.name)}" class="block group">
                                            <h3 class="font-bold text-lg text-gray-800 group-hover:text-purple-600 transition-colors mb-2">
                                                ${artist.name}
                                            </h3>
                                            <div class="flex flex-wrap gap-4 text-sm text-gray-600">
                                                <span>
                                                    <i class="fas fa-music mr-1"></i>
                                                    ${artist.songs.length}곡
                                                </span>
                                                <span>
                                                    <i class="fas fa-chart-line mr-1"></i>
                                                    평균 ${Math.round(artist.totalViews / artist.songs.length).toLocaleString()} 조회수/곡
                                                </span>
                                            </div>
                                        </a>
                                        
                                        <!-- 대표곡 미리보기 -->
                                        <div class="mt-3">
                                            <div class="text-xs text-gray-500 mb-2">인기곡</div>
                                            <div class="flex flex-wrap gap-2">
                                                ${artist.songs.sort((a, b) => b.views - a.views).slice(0, 3).map(song => `
                                                    <a href="/songs/${song.name}" class="inline-block bg-purple-50 hover:bg-purple-100 text-purple-700 text-xs px-2 py-1 rounded-full transition-colors">
                                                        ${song.ori_name || song.name} (${song.views.toLocaleString()})
                                                    </a>
                                                `).join('')}
                                            </div>
                                        </div>
                                    </div>
                                    <div class="flex-shrink-0 text-right">
                                        <div class="text-xl font-bold text-purple-600">
                                            <i class="fas fa-eye mr-1"></i>
                                            ${artist.totalViews.toLocaleString()}
                                        </div>
                                        <div class="text-xs text-gray-500">총 조회수</div>
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;
        }
    </script>
</body>
</html>
