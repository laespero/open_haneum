# 3. 에이전트의 `edit_file` 도구 사용 시 주의점

에이전트가 제공하는 `edit_file` 도구는 간단한 코드 변경에는 유용하지만, 복잡한 JSON 구조 내 특정 값을 정확히 찾아 수정하는 데는 다음과 같은 어려움이 있을 수 있습니다.

*   **컨텍스트 파악의 한계**: `// ... existing code ...` 주석을 사용하여 변경 범위를 지정하더라도, 에이전트가 정확한 수정 지점을 찾지 못하거나, 의도치 않은 부분을 변경할 가능성이 있습니다. 특히 JSON과 같이 중첩된 구조에서는 더욱 그렇습니다.
*   **민감한 형식**: `code_edit`으로 제공하는 코드 조각의 형식이나 컨텍스트 범위에 따라 수정 성공 여부가 크게 달라질 수 있습니다.
*   **반복적인 실패**: 여러 번 시도해도 변경 사항이 적용되지 않는 경우가 발생할 수 있습니다. 이때는 다음과 같은 접근을 고려해야 합니다.
    *   **최소한의 컨텍스트**: 수정 대상 라인과 바로 앞뒤의 최소한의 코드만 `code_edit`으로 제공하고, `instructions`를 매우 명확하고 상세하게 작성합니다.
    *   **스크립트 사용 고려**: 지속적으로 실패한다면, 에이전트에게 Node.js 스크립트 생성을 요청하는 것이 더 효율적일 수 있습니다.
    *   **전체 파일 내용 수정**: (본 가이드 업데이트처럼) 수정 범위가 넓거나 복잡한 경우, 에이전트가 파일 전체 내용을 읽고, 사용자가 제시한 수정 사항을 반영한 **새로운 전체 파일 내용을 생성하여 한 번에 덮어쓰도록 요청**하는 것이 더 안정적일 수 있습니다.
*   **에이전트의 도구 사용 오류**: 에이전트가 터미널 명령 실행 도구 (`run_terminal_cmd` 등) 사용 시, 필수 인자(예: `is_background`)를 누락할 수 있습니다. 에이전트가 제시하는 명령이나 스크립트 실행 과정을 주의 깊게 살펴보고, 오류 발생 시 원인을 파악하여 수정 요청하는 것이 좋습니다. 