# 2. JSON 데이터 구조 이해

작업 대상 JSON 파일은 주로 다음과 같은 구조를 가집니다. (예: `songs/some_song.json`)

```json
{
  "title": "노래 제목",
  "artist": "아티스트",
  // ... 기타 메타데이터 ...
  "translatedLines": [
    {
      "T0": "가사 원문 (예: 일본어, 중국어, 영어)",
      "K0": "가사 한국어 번역문 (수정 대상)",
      "C0": "문맥 정보 또는 코멘트",
      "G0": "초기 번역 또는 자동 번역 (참고용)",
      "I0": "**원문 전체(`T0`)의 병음(중국어) 또는 IPA(영어 등) 표기.**",
      "R0": "**원문 전체(`T0`)의 한글 발음 표기.** 예: `R0: \"짜이 츠 인 창 저 시 누 쏘트 잇츠 프리티 쿨\"`",
      "LI": [
        {
          "T1": "형태소 분석된 단어/구문",
          "K1": "T1의 한국어 번역",
          "E1": "T1의 의미/문법적 설명 (수정 대상)",
          "I1": "**`T1`의 병음(중국어) 또는 IPA(영어 등) 표기.**",
          "R1": "**`T1`의 한글 발음 표기.** 예: `R1: \"쏘트\"`",
          "T2": "T1의 원형 또는 관련 표현",
          "K2": "T2의 한국어 번역",
          "E2": "T2의 의미/문법적 설명",
          "I2": "**`T2`의 병음(중국어) 또는 IPA(영어 등) 표기.**",
          "R2": "**`T2`의 한글 발음 표기.**",
          "XE": "T1을 활용한 예문 (수정 대상)",
          "XK": "XE의 한국어 번역 (수정 대상)",
          "XI": "**예문 원문(`XE`)의 병음(중국어) 또는 IPA(영어 등) 표기.** 경우에 따라 이미지 URL 등으로 사용될 수도 있음. 예: `XI: \"aɪ θɔt ju wɜr ˈkʌmɪŋ\"`",
          "XR": "**예문 원문(`XE`)의 한글 발음 표기.** 예: `XR: \"아이 쏘트 유 워 커밍\"`"
        },
        // ... 다른 LI 항목 ...
      ]
    },
    // ... 다른 translatedLines 항목 ...
  ],
  "rubyData": "후리가나 HTML 데이터..."
}
```

**주요 필드 설명:**

*   `translatedLines`: 각 가사 라인별 정보를 담는 배열입니다.
*   `T0`: 해당 라인의 원문 가사입니다.
*   `K0`: `T0`에 대한 최종 한국어 번역문으로, 주로 이 필드의 품질을 개선합니다.
*   `I0`, `I1`, `I2`, `XI`: **원문 또는 예문의 병음(중국어), IPA(영어 등 국제 음성 기호), 또는 기타 발음 표기입니다.**
    *   **중국어 병음**: 성조 표기는 숫자(예: `pin1yin1`, `ni3hao3`) 또는 성조 부호(예: `pīnyīn`, `nǐhǎo`)를 사용할 수 있습니다. 프로젝트의 일관된 가이드라인을 따르거나, 혼용 시 변환 규칙을 명확히 하는 것이 좋습니다. 가급적 성조 부호 사용을 권장합니다.
    *   **IPA**: 슬래시(`/ `)로 감싸는 경우가 있으나, 데이터 처리의 일관성을 위해 제거하는 것을 고려합니다. (스크립트 예시 참고)
*   `R0`, `R1`, `R2`, `XR`: **원문 또는 예문의 한글 발음 표기입니다.**
*   `LI`: `T0` 라인 내의 주요 단어, 구문, 형태소에 대한 상세 분석 정보를 담는 배열입니다.
    *   `T1`: 분석된 원문 단어/구문입니다.
    *   `K1`: `T1`의 한국어 번역입니다. 일관성 있는 표기가 중요합니다.
    *   `E1`: `T1`에 대한 문법적, 의미적 설명입니다. 이 설명이 명확하고 정확한지 검토합니다.
    *   `T2`, `K2`, `E2`: `T1`의 원형, 관련 표현 또는 추가 분석 정보와 그에 대한 번역, 설명입니다.
    *   `XE`: `T1`을 활용한 예문입니다. 문맥에 맞고 자연스러운 예문인지 확인합니다.
    *   `XK`: `XE`예문의 한국어 번역입니다. `XE`와 잘 대응되는지 확인합니다.
*   `rubyData`: **(주로 일본어 가사) 가사 전체에 대한 후리가나(루비 문자) 정보가 포함된 HTML 문자열입니다.**
    *   가사의 각 한자에 대한 읽는 법을 표시하는 데 사용됩니다.
    *   구조 예시: `...<span class="ruby"><span class="rb">人生</span><span class="rt">じんせい</span></span>...`
    *   이 데이터가 부정확할 경우, `utaten.com`과 같은 외부 가사 사이트를 참조하여 정확한 정보로 수정해야 할 수 있습니다.

이러한 구조를 이해하는 것은 정확한 데이터 조회 및 수정을 위한 첫걸음입니다. 